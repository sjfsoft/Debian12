# 预配置文件(Debian 12 bookworm preseed)

########
# 本地化
########
# 仅预置区域设置语言，国家和地区。
d-i debian-installer/locale string en_US
# 这些值也可以单独预置以获得更大的灵活性。
#d-i debian-installer/language string zh
#d-i debian-installer/country string CN
#d-i debian-installer/locale string zh_CN.UTF-8
# 可选择指定要生成的其他语言环境。
#d-i localechooser/supported-locales multiselect zh_CN.UTF-8, en_US.UTF-8
# 键盘选择。
d-i keyboard-configuration/xkb-keymap select us

##########
# 网络配置
##########
# 完全禁用网络配置。
#d-i netcfg/enable boolean false
# 自动选择具有链接的接口。
d-i netcfg/choose_interface select auto
# 手动选择特定接口：
#d-i netcfg/choose_interface select eth0
# 设置不同的链接检测超时（默认为 3 秒）。值的单位为秒。
#d-i netcfg/link_wait_timeout string 10
# 默认是自动配置网络。手动配置网络，请取消注释此行和下面的静态网络配置。
#d-i netcfg/disable_autoconfig boolean true
# 如果您的 dhcp 服务器很慢并且安装程序等待它超时，这可能会有用。
#d-i netcfg/dhcp_timeout string 60
#d-i netcfg/dhcpv6_timeout string 60
# 默认是自动配置网络。手动配置网络，请取消注释此行和下面的静态网络配置。
#d-i netcfg/disable_autoconfig boolean true
# 如果您希望预配置文件在有和没有 dhcp 服务器的系统上都能工作，请取消注释这些行和下面的静态网络配置。
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually
# 静态网络配置。
# IPv4 例子
#d-i netcfg/get_ipaddress string 172.31.31.200
#d-i netcfg/get_netmask string 255.255.240.0
#d-i netcfg/get_gateway string 172.31.16.1
#d-i netcfg/get_nameservers string 1.1.1.1
#d-i netcfg/confirm_static boolean true
# 从 dhcp 分配的任何主机名和域名优先于此处设置的值。 但是，设置值仍然会阻止显示问题，即使值来自 dhcp。
d-i netcfg/get_hostname string Amazon
d-i netcfg/get_domain string unisonteam.com
# 如果要强制使用主机名，无论 DHCP 服务器返回什么或 IP 的反向 DNS 条目是什么，请取消注释并调整以下行。
d-i netcfg/hostname string Amazon
# 禁用烦人的 WEP 密钥对话框。
d-i netcfg/wireless_wep string
# 某些 ISP 用作各种密码的古怪 dhcp 主机名
d-i netcfg/dhcp_hostname string Amazon
# 如果您想完全禁用固件查找（即不使用可能在安装映像上可用的固件文件或包）：
#d-i hw-detect/firmware-lookup string never
# 如果网络或其他硬件需要非自由固件，您可以将安装程序配置为始终尝试加载它，而不提示。 或者更改为 false 以禁用询问。
#d-i hw-detect/load_firmware boolean true

############
# 网络控制台
############
# 如果您希望使用网络控制台组件通过 SSH 进行远程安装，请使用以下设置。 这仅在您打算手动执行其余安装时才有意义。
#d-i anna/choose_modules string network-console
#d-i network-console/authorized_keys_url string http://10.0.0.1/openssh-key
#d-i network-console/password password r00tme
#d-i network-console/password-again password r00tme

#########
# 镜像设置
#########
# 镜像协议：如果选择 ftp，则不需要设置 mirror/country 字符串。镜像协议的默认值：http。
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### 帐户设置
# 跳过创建 root 帐户（普通用户帐户将能够使用 sudo）。
#d-i passwd/root-login boolean false
# 或者，跳过创建普通用户帐户。
d-i passwd/make-user boolean false
# root 明文密码 #d-i passwd/root-password password 密码 #d-i passwd/root-password-again password 密码
# root 哈希密码。(生成方法：apt install whois && mkpasswd --method=sha-512 密码)
d-i passwd/root-password-crypted password $6$5Dhv2z4POhnwubxK$BQJ25GEU.ktPhlna6y1hrRRQxEaiubzEz5ZHfbR.gT7tiJNCRGkduc9v7DF.z7dBYuKPWSbcfa1pLMp0LMypX1
# 创建普通用户帐户。#d-i passwd/user-fullname string 用户全名 #d-i passwd/username string 用户名
# 普通用户明文密码#d-i passwd/user-password password 密码 #d-i passwd/user-password-again password 密码
# 普通用户哈希密码。(apt install whois && mkpasswd --method=sha-512 密码)
#d-i passwd/user-password-crypted password $6$KC2vbKEixeRBG4PC$nVdYPvnfboRdUcvpb6g4xnZG42mXRE8.prfl1q4Brjn/D0Tix/G7A1JCS3sMTdVHM8utnVQrOdtEnpnKEFQsJ/
# 使用指定的 UID 而不是默认值创建第一个用户。
#d-i passwd/user-uid string 1010
# 用户帐户将被添加到一些标准的初始组中。 要覆盖它，请使用它。
#d-i passwd/user-default-groups string audio cdrom video

### 时钟和时区设置
# 控制硬件时钟是否设置为 UTC。
d-i clock-setup/utc boolean true
# 查看 /usr/share/zoneinfo/ 的内容以获取有效值。
d-i time/zone string Asia/Shanghai
# 控制是否在安装期间使用 NTP 设置时钟
d-i clock-setup/ntp boolean true
# 要使用的 NTP 服务器。 这里的默认值几乎总是可以的。
#d-i clock-setup/ntp-server string ntp.example.com

### 分区
## 分区示例
# 如果系统有可用空间，您可以选择仅对该空间进行分区。这仅在未设置 partman-auto/method（如下）时才有效。
#d-i partman-auto/init_automatically_partition select biggest_free
# 或者，您可以指定要分区的磁盘。 如果系统只有一个磁盘，安装程序将默认使用该磁盘，否则设备名称必须以传统的非 devfs 格式给出（例如 /dev/sda 而不是 /dev/discs/disc0/disc）。
# 例如，要使用第一个 SCSI/SATA 硬盘：
d-i partman-auto/disk string /dev/nvme0n1
# 此外，您还需要指定要使用的方法。目前可用的方法有：- regular: 为您的体系结构使用常用的分区类型 - lvm: 使用 LVM 对磁盘进行分区 - crypto: 在加密分区中使用 LVM
d-i partman-auto/method string lvm
# 您可以定义将用于 LVM 卷组的空间量。 它可以是带有单位的大小（例如 20 GB）、可用空间的百分比或“max”关键字。
d-i partman-auto-lvm/guided_size string max
# 如果要自动分区的其中一个磁盘包含旧的 LVM 配置，用户通常会收到警告。 这可以被预播...
d-i partman-lvm/device_remove_lvm boolean true
# 这同样适用于预先存在的软件 RAID 阵列：
d-i partman-md/device_remove_md boolean true
# 确认写入 lvm 分区也是如此。
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
# 您可以选择三种预定义的分区方案之一：- atomic: 一个分区中的所有文件 - home: 单独的 /home 分区 - multi: 单独的 /home、/var 和 /tmp 分区
d-i partman-auto/choose_recipe select atomic
# 如果您使用上述方法之一告诉它要做什么，这会使 partman 自动分区而无需确认。
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
# 强制 UEFI 引导（“BIOS 兼容性”将丢失）。 默认值：false。
#d-i partman-efi/non_efi_system boolean true
# 确保分区表是 GPT - 这是 EFI 所必需的
#d-i partman-partitioning/choose_label select gpt
#d-i partman-partitioning/default_label string gpt
# 启用磁盘加密后，请跳过预先擦除分区。
#d-i partman-auto-crypto/erase_disks boolean false
# 这使得partman在没有确认的情况下自动分区。
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
## 控制分区的挂载方式
# 默认是通过 UUID 挂载，但您也可以选择“traditional”以使用传统设备名称，或选择“label”以在回退到 UUID 之前尝试文件系统标签。
#d-i partman/mount_style select uuid

### 基础系统安装
# 将 APT 配置为默认不安装推荐的软件包。 使用此选项会导致系统不完整，只能由非常有经验的用户使用。
#d-i base-installer/install-recommends boolean false
# 要安装的内核映像（元）包； 如果不安装内核，可以使用“none”。
#d-i base-installer/kernel/image string linux-image-686

### Apt 设置
# 选择是否要扫描其他安装媒体（默认值：false）。
d-i apt-setup/cdrom/set-first boolean false
# 您可以选择安装非自由固件。
#d-i apt-setup/non-free-firmware boolean true
# 您可以选择安装非自由和贡献软件。
#d-i apt-setup/non-free boolean true
#d-i apt-setup/contrib boolean true
# 如果您不想在已安装的系统中激活 DVD/BD 安装映像的 sources.list 条目，请取消注释以下行（netinst 或 CD 映像的条目无论如何都会被禁用，无论此设置如何）。
d-i apt-setup/disable-cdrom-entries boolean true
# 如果您不想使用网络镜像，请取消注释。
#d-i apt-setup/use_mirror boolean false
# 选择要使用的更新服务； 定义要使用的镜像。下面显示的值是正常的默认值。
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.debian.org
# 取消注释以添加 i386 的多架构配置
#d-i apt-setup/multiarch string i386

### Package 选择
tasksel tasksel/first multiselect standard, ssh-server
#web-server, kde-desktop
# 或者选择完全不显示 tasksel 对话框（并且不安装任何包）：
#d-i pkgsel/run_tasksel boolean false
# 要安装的单独附加包（cockpit-pcp）
d-i pkgsel/include string vim net-tools lrzsz p7zip-full dnsutils curl cockpit \
	php-fpm php-imagick php-bcmath php-curl php-gd php-gmp php-intl php-mbstring php-mysql php-xml php-zip

# 是否在 debootstrap 后升级包。允许值：none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade
# 您可以选择，如果您的系统将报告您安装了哪些软件，以及您使用了哪些软件。 默认情况下不返回报告，但发送报告有助于项目确定最流行的软件以及应该包含在第一张 CD/DVD 中的软件。
popularity-contest popularity-contest/participate boolean false

### 引导装载程序安装
# Grub 是引导装载程序（用于 x86）。
# 这是相当安全的设置，如果在机器上未检测到其他操作系统，它会使 grub 自动安装到 UEFI 分区/引导记录。
d-i grub-installer/only_debian boolean true
# 这会使 grub-installer 安装到 UEFI 分区/启动记录，如果它也找到一些其他操作系统，这不太安全，因为它可能无法启动其他操作系统。
d-i grub-installer/with_other_os boolean false
# 特别是由于潜在的 USB 记忆棒，通常无法安全地确定主驱动器的位置，因此需要指定：
#d-i grub-installer/bootdev  string /dev/sda
# 要安装到主设备（假设它不是 U 盘）：
d-i grub-installer/bootdev  string default
# grub 的可选密码，可以是明文形式
#d-i grub-installer/password password r00tme
#d-i grub-installer/password-again password r00tme
# 或使用 MD5 哈希加密，请参阅 grub-md5-crypt(8)。
#d-i grub-installer/password-crypted password [MD5 hash]
# 使用以下选项为已安装的系统添加额外的引导参数（如果引导加载程序安装程序支持）。
# 注意：传递给安装程序的选项将自动添加。
#d-i debian-installer/add-kernel-opts string nousb

### 完成安装
# 在从串行控制台安装期间，常规虚拟控制台 (VT1-VT6) 通常在 /etc/inittab 中被禁用。 取消注释下一行以防止出现这种情况。
#d-i finish-install/keep-consoles boolean true
# 避免关于安装完成的最后一条消息。
d-i finish-install/reboot_in_progress note
# 这将防止安装程序在重新启动期间弹出 CD，这在某些情况下很有用。
#d-i cdrom-detect/eject boolean false
# 这是如何使安装程序在完成后关闭，而不是重新启动到已安装的系统。
#d-i debian-installer/exit/halt boolean true
# 这将关闭机器而不是仅仅停止它。
#d-i debian-installer/exit/poweroff boolean true

### 预置其他包
# 根据您选择安装的软件，或者如果在安装过程中出现问题，可能会提出其他问题。 当然，您也可以预置这些。 要获取安装期间可能提出的每个可能问题的列表，请执行安装，然后运行以下命令：
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file


#### 高级选项
### 在安装期间运行自定义命令
# 此命令在安装完成之前运行，但此时仍有可用的 /target 目录。 您可以 chroot 到 /target 并直接使用它，或者使用 apt-install 和 in-target 命令轻松地在目标系统中安装包和运行命令。
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
d-i preseed/late_command string mkdir -p /target/root/.ssh;mkdir -p /target/usr/lib/x86_64-linux-gnu/udisks2/modules;\
wget -O /target/root/.bashrc https://raw.githubusercontent.com/sjfsoft/Debian12/main/bashrc;\
wget -O /target/root/.ssh/authorized_keys https://raw.githubusercontent.com/sjfsoft/Debian12/main/authorized_keys;\
sed -i '/.*/d' /target/etc/motd;\
sed -i '/ip6/d' /target/etc/hosts;\
sed -i 's|^#Port 22|Port 11011|' /target/etc/ssh/sshd_config;\
sed -i 's|^#AddressFamily any|AddressFamily inet|' /target/etc/ssh/sshd_config;\
sed -i 's|^#ListenAddress 0|ListenAddress 0|' /target/etc/ssh/sshd_config;\
sed -i 's|^#PermitR|PermitR|' /target/etc/ssh/sshd_config;\
sed -i 's|^#AuthorizedKeysFile|AuthorizedKeysFile|' /target/etc/ssh/sshd_config;\
sed -i 's|^#GSSAPIA|GSSAPIA|' /target/etc/ssh/sshd_config;\
sed -i 's|^#UseDNS|UseDNS|' /target/etc/ssh/sshd_config;\
sed -i 's|^#PrintL|PrintL|' /target/etc/ssh/sshd_config;\
sed -i 's|^X11|#&|' /target/etc/ssh/sshd_config;\
sed -i 's|=a$|=ni|' /target/usr/share/vim/vim90/defaults.vim;\
sed -i 's|9090$|11111|' /target/usr/lib/systemd/system/cockpit.socket;\
sed -i 's|Enabled=n$|Enabled=y|' /target/etc/waagent.conf;\
sed -i '$a net.ipv4.tcp_congestion_control=bbr' /target/etc/sysctl.conf;\
sed -i '$a net.core.default_qdisc=fq' /target/etc/sysctl.conf;\
sed -i 's|5$|0|' /target/etc/default/grub;\
in-target update-grub2


